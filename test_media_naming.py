#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –≤ –∏–º–µ–Ω–æ–≤–∞–Ω–∏–∏ –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤ –∏ HTML —ç–∫—Å–ø–æ—Ä—Ç–µ.
"""

import sys
from pathlib import Path
from media_downloader import MediaDownloader
from export_manager import ExportManager

def test_media_filename_generation():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –∏–º–µ–Ω —Ñ–∞–π–ª–æ–≤ –Ω–∞ –æ—Å–Ω–æ–≤–µ ID —Å–æ–æ–±—â–µ–Ω–∏—è."""
    print("=== –¢–µ—Å—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–º–µ–Ω –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤ ===")
    
    downloader = MediaDownloader("downloads/media")
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ —Å–ª—É—á–∞–∏
    test_cases = [
        {
            'media_type': 'photo',
            'original_filename': 'IMG_20250720_123456.jpg',
            'extension': None,
            'message_id': 160883,
            'expected': '160883.jpg'
        },
        {
            'media_type': 'video',
            'original_filename': 'video.mp4',
            'extension': None,
            'message_id': 160890,
            'expected': '160890.mp4'
        },
        {
            'media_type': 'document',
            'original_filename': 'document.pdf',
            'extension': None,
            'message_id': 160902,
            'expected': '160902.pdf'
        },
        {
            'media_type': 'audio',
            'original_filename': None,
            'extension': '.mp3',
            'message_id': 160903,
            'expected': '160903.mp3'
        }
    ]
    
    all_passed = True
    for i, case in enumerate(test_cases, 1):
        result = downloader._generate_filename(
            case['media_type'],
            case['original_filename'],
            case['extension'],
            case['message_id']
        )
        
        passed = result == case['expected']
        status = "‚úì PASS" if passed else "‚úó FAIL"
        print(f"–¢–µ—Å—Ç {i}: {status}")
        print(f"  –û–∂–∏–¥–∞–ª–æ—Å—å: {case['expected']}")
        print(f"  –ü–æ–ª—É—á–µ–Ω–æ:  {result}")
        
        if not passed:
            all_passed = False
    
    return all_passed

def test_html_media_paths():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã—Ö –ø—É—Ç–µ–π –∫ –º–µ–¥–∏–∞—Ñ–∞–π–ª–∞–º –≤ HTML."""
    print("\n=== –¢–µ—Å—Ç HTML –ø—É—Ç–µ–π –∫ –º–µ–¥–∏–∞—Ñ–∞–π–ª–∞–º ===")
    
    export_manager = ExportManager("downloads")
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ —Å–ª—É—á–∞–∏
    test_cases = [
        {
            'file_path': 'downloads/media/photos/160883.jpg',
            'expected': 'media/photos/160883.jpg'
        },
        {
            'file_path': 'downloads/media/videos/160890.mp4',
            'expected': 'media/videos/160890.mp4'
        },
        {
            'file_path': 'downloads/media/documents/160902.pdf',
            'expected': 'media/documents/160902.pdf'
        },
        {
            'file_path': '/absolute/path/to/file.txt',
            'expected': 'file.txt'
        }
    ]
    
    all_passed = True
    for i, case in enumerate(test_cases, 1):
        result = export_manager._get_relative_media_path(case['file_path'])
        
        passed = result == case['expected']
        status = "‚úì PASS" if passed else "‚úó FAIL"
        print(f"–¢–µ—Å—Ç {i}: {status}")
        print(f"  –ü—É—Ç—å:      {case['file_path']}")
        print(f"  –û–∂–∏–¥–∞–ª–æ—Å—å: {case['expected']}")
        print(f"  –ü–æ–ª—É—á–µ–Ω–æ:  {result}")
        
        if not passed:
            all_passed = False
    
    return all_passed

def test_html_generation():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏—é HTML —Å –º–µ–¥–∏–∞—Ñ–∞–π–ª–∞–º–∏."""
    print("\n=== –¢–µ—Å—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ HTML ===")
    
    export_manager = ExportManager("downloads")
    
    # –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–º
    test_message = {
        'id': 160883,
        'date': '2025-07-20 12:00:00+00:00',
        'message': '–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ñ–æ—Ç–æ',
        'sender_info': {
            'first_name': '–¢–µ—Å—Ç',
            'last_name': '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'
        },
        'media_info': {
            'type': 'photo',
            'file_path': 'downloads/media/photos/160883.jpg'
        }
    }
    
    html = export_manager._generate_message_html(test_message)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ HTML —Å–æ–¥–µ—Ä–∂–∏—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø—É—Ç—å –∫ –º–µ–¥–∏–∞—Ñ–∞–π–ª—É
    expected_path = 'media/photos/160883.jpg'
    contains_correct_path = expected_path in html
    
    status = "‚úì PASS" if contains_correct_path else "‚úó FAIL"
    print(f"–¢–µ—Å—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ HTML: {status}")
    print(f"  –û–∂–∏–¥–∞–µ–º—ã–π –ø—É—Ç—å: {expected_path}")
    print(f"  –ù–∞–π–¥–µ–Ω –≤ HTML: {contains_correct_path}")
    
    if contains_correct_path:
        print("  HTML —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π –ø—É—Ç—å –∫ –º–µ–¥–∏–∞—Ñ–∞–π–ª—É")
    else:
        print("  HTML –ù–ï —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –ø—É—Ç—å –∫ –º–µ–¥–∏–∞—Ñ–∞–π–ª—É")
        print(f"  –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π HTML:\n{html}")
    
    return contains_correct_path

def main():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –≤—Å–µ —Ç–µ—Å—Ç—ã."""
    print("–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π...")
    
    test1_passed = test_media_filename_generation()
    test2_passed = test_html_media_paths()
    test3_passed = test_html_generation()
    
    print("\n" + "="*50)
    print("–†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:")
    print(f"–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–º–µ–Ω —Ñ–∞–π–ª–æ–≤: {'‚úì PASS' if test1_passed else '‚úó FAIL'}")
    print(f"HTML –ø—É—Ç–∏ –∫ –º–µ–¥–∏–∞—Ñ–∞–π–ª–∞–º: {'‚úì PASS' if test2_passed else '‚úó FAIL'}")
    print(f"–ì–µ–Ω–µ—Ä–∞—Ü–∏—è HTML: {'‚úì PASS' if test3_passed else '‚úó FAIL'}")
    
    all_passed = test1_passed and test2_passed and test3_passed
    
    if all_passed:
        print("\nüéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–®–õ–ò –£–°–ü–ï–®–ù–û!")
        print("\n–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ:")
        print("- –ú–µ–¥–∏–∞—Ñ–∞–π–ª—ã –∏–º–µ–Ω—É—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø–æ ID —Å–æ–æ–±—â–µ–Ω–∏—è")
        print("- HTML —Ñ–∞–π–ª—ã –∏ –º–µ–¥–∏–∞—Ñ–∞–π–ª—ã —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ –ø–∞–ø–∫—É downloads")
        print("- HTML —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –º–µ–¥–∏–∞—Ñ–∞–π–ª—ã")
    else:
        print("\n‚ùå –ù–ï–ö–û–¢–û–†–´–ï –¢–ï–°–¢–´ –ù–ï –ü–†–û–®–õ–ò")
        print("–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∏ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –∫–æ–¥")
        return 1
    
    return 0

if __name__ == "__main__":
    sys.exit(main())